version: '3.1'

services:

  redis:
    image: redis
    hostname: redis
    ports:
      - '6379'
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5

  postgres_db:
    image: postgres:16.0
    env_file:
      - .env.docker
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - '5432'
    volumes:
      - pg_data:/var/lib/postgresql/data/pgdata
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    env_file:
      - .env.docker
    command: >
      sh -c "
      python manage.py migrate && 
      python manage.py createadmin &&
      python manage.py runserver 0.0.0.0:8000 
      "
#      python manage.py collectstatic --no-input"
    ports:
      - '8000:8000'
    depends_on:
      - postgres_db

  worker:
    build: .
    tty: true
    hostname: worker
    entrypoint: celery
    command: -A config beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    links:
      - redis
    depends_on:
      - redis
      - app
    env_file:
      - .env.docker

  celery:
    build: .
    tty: true
    command: celery -A config worker -l INFO
    depends_on:
      - redis
      - app
    env_file:
      - .env.docker

  flower:
    build: .
    hostname: flower
    entrypoint: celery
    command: -A config flower
    ports:
      - '5555:5555'
    links:
      - redis
      - postgres_db
    depends_on:
      - redis
      - app
    env_file:
      - .env.docker

volumes:
  pg_data: